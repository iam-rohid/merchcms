# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ChangePasswordFailure {
  newPasswordError: String
  oldPasswordError: String
  otherError: String
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

union ChangePasswordResult = ChangePasswordFailure | ChangePasswordSuccess

type ChangePasswordSuccess {
  message: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type EmailPasswordSignInFailure {
  emailError: String
  otherError: String
  passwordError: String
}

input EmailPasswordSignInInput {
  email: String!
  password: String!
}

union EmailPasswordSignInResult = EmailPasswordSignInFailure | EmailPasswordSignInSuccess

type EmailPasswordSignInSuccess {
  token: String!
  user: User!
}

type EmailPasswordSignUpFailure {
  emailError: String
  otherError: String
  passwordError: String
  usernameError: String
}

input EmailPasswordSignUpInput {
  email: String!
  password: String!
  username: String!
}

union EmailPasswordSignUpResult = EmailPasswordSignUpFailure | EmailPasswordSignUpSuccess

type EmailPasswordSignUpSuccess {
  email: String!
}

type EmailVerificationFailure {
  emailError: String
  otherError: String
  tokenError: String
}

input EmailVerificationInput {
  email: String!
  token: String!
}

union EmailVerificationResult = EmailVerificationFailure | EmailVerificationSuccess

type EmailVerificationSuccess {
  token: String!
  user: User!
}

type Mutation {
  changePassword(input: ChangePasswordInput!): ChangePasswordResult!
  eamilPasswordSignIn(input: EmailPasswordSignInInput!): EmailPasswordSignInResult!
  eamilPasswordSignUp(input: EmailPasswordSignUpInput!): EmailPasswordSignUpResult!
  resendVerificationEmail(input: ResendVerificationEmailInput!): ResendVerificationEmailResult!
  sendResetPasswordEmail(input: SendResetPasswordEmailInput!): SendResetPasswordEmailResult!
  verifyEmail(input: EmailVerificationInput!): EmailVerificationResult!
}

type Query {
  getHello: String!
}

type ResendVerificationEmailFailure {
  message: String!
}

input ResendVerificationEmailInput {
  email: String!
}

union ResendVerificationEmailResult = ResendVerificationEmailFailure | ResendVerificationEmailSuccess

type ResendVerificationEmailSuccess {
  message: String!
}

type SendResetPasswordEmailFailure {
  emailError: String
  otherError: String
}

input SendResetPasswordEmailInput {
  email: String!
}

union SendResetPasswordEmailResult = SendResetPasswordEmailFailure | SendResetPasswordEmailSuccess

type SendResetPasswordEmailSuccess {
  message: String!
}

type User {
  createdAt: DateTime!
  email: String!
  emailVerified: Boolean!
  id: String!
  updatedAt: DateTime!
  username: String!
}